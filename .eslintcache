[{"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\TableForm\\TableForms.js":"4","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Timer\\TimerProc.js":"5","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Timer\\Timer.js":"6","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Categories\\Categories.js":"7","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Loading\\Loading.jsx":"8","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Footer\\Footer.js":"9","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Header\\Header.js":"10","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\TableForm\\TableForm.js":"11","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Popup.js":"12","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Notification.js":"13","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\ConfirmDialog.js":"14","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\useTable.js":"15","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\categories\\calendarTask.js":"16","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Controls.js":"17","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\useForm.js":"18","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Button.js":"19","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Input.js":"20","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Select.js":"21","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\ActionButton.js":"22","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\About\\About.js":"23","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\calendar\\Calendar.js":"24"},{"size":472,"mtime":1614914354469,"results":"25","hashOfConfig":"26"},{"size":1952,"mtime":1618215027535,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1614727596936,"results":"28","hashOfConfig":"26"},{"size":8330,"mtime":1618207266485,"results":"29","hashOfConfig":"26"},{"size":2196,"mtime":1615946628513,"results":"30","hashOfConfig":"26"},{"size":2205,"mtime":1615946628511,"results":"31","hashOfConfig":"26"},{"size":798,"mtime":1618207266483,"results":"32","hashOfConfig":"26"},{"size":790,"mtime":1615938454739,"results":"33","hashOfConfig":"26"},{"size":1413,"mtime":1618214552429,"results":"34","hashOfConfig":"26"},{"size":1078,"mtime":1618207253511,"results":"35","hashOfConfig":"26"},{"size":4847,"mtime":1617847725023,"results":"36","hashOfConfig":"26"},{"size":1322,"mtime":1616576836069,"results":"37","hashOfConfig":"26"},{"size":957,"mtime":1616576837315,"results":"38","hashOfConfig":"26"},{"size":2186,"mtime":1617811089669,"results":"39","hashOfConfig":"26"},{"size":3803,"mtime":1618207253526,"results":"40","hashOfConfig":"26"},{"size":1518,"mtime":1617811089664,"results":"41","hashOfConfig":"26"},{"size":249,"mtime":1616576845154,"results":"42","hashOfConfig":"26"},{"size":1202,"mtime":1617811089677,"results":"43","hashOfConfig":"26"},{"size":768,"mtime":1616576846298,"results":"44","hashOfConfig":"26"},{"size":478,"mtime":1616578534896,"results":"45","hashOfConfig":"26"},{"size":940,"mtime":1616578520554,"results":"46","hashOfConfig":"26"},{"size":982,"mtime":1617811089676,"results":"47","hashOfConfig":"26"},{"size":113,"mtime":1617847725015,"results":"48","hashOfConfig":"26"},{"size":14451,"mtime":1618239898572,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"19yx78f",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\index.js",[],["102","103"],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\App.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\TableForm\\TableForms.js",["104","105"],"import React, {useState} from 'react'\r\nimport TableForm from './TableForm'\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core'\r\nimport useTable from \"../../components/useTable\"\r\nimport * as calendarTask from '../../categories/calendarTask'\r\nimport Controls from \"../../components/controls/Controls\"\r\nimport { Search } from \"@material-ui/icons\"\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Popup from '../Popup';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Notification from \"../Notification\"\r\nimport ConfirmDialog from \"../ConfirmDialog\"\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport { changeTileColor, time} from '../../components/calendar/Calendar'\r\nimport { relativeTimeRounding } from 'moment'\r\nimport { blue } from '@material-ui/core/colors';\r\nimport './TableForm.scss';\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    pageContent: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n        \r\n        \r\n    },\r\n    searchInput: {\r\n        width: '560px',\r\n        position: 'relative',\r\n        color:'red',\r\n        display: 'flex',\r\n        \r\n    },\r\n    \r\n    newButton : {\r\n        position: 'relative',\r\n        left: 1,\r\n        display: 'flex',\r\n        height: '55px',\r\n        width: '100px'\r\n    },\r\n}))\r\n\r\nconst headCells = [\r\n    {id: 'task' , label:'Task Name'},\r\n    {id: 'time' , label:'Total Allocated Time'},\r\n    {id: 'category' , label:'Category'},\r\n    {id: 'complete', label:\"Mark Complete\"},\r\n    {id: 'actions', label:'Actions', disableSorting: true}\r\n]\r\n\r\nexport default function TableForms() {\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null);\r\n    const [records, setRecords] = useState(calendarTask.getAllTasks());\r\n    const [filterFn, setFilterFn] = useState({fn:items => {return items;}})\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [notify, setNotify] = useState({isOpen: false, message:'', type:''})\r\n    const [confirmDialog, setConfirmDialog] = useState({isOpen:false, title:'', subTitle:''})\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    }=useTable(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn:items => {\r\n                if(target.value === \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.task.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const addOrEdit = (task, resetForm) => {\r\n        if (task.id === 0) {\r\n            calendarTask.insertNewTask(task)\r\n        }\r\n        else {\r\n            calendarTask.updateTask(task)\r\n            resetForm()\r\n            setRecordForEdit(null)\r\n            setOpenPopup(false)\r\n            setRecords(calendarTask.getAllTasks())\r\n            setNotify({\r\n                isOpen: true,\r\n                message: 'Submitted Successfully',\r\n                type: 'success'\r\n            })\r\n        }\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const addToCalendar = item => {\r\n        changeTileColor(item.task, item.category);\r\n        item.allocatedTime = `${time}m`;\r\n        calendarTask.updateTask(item);\r\n        setRecords(calendarTask.getAllTasks());\r\n\r\n    }\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        calendarTask.deleteTask(id);\r\n        setRecords(calendarTask.getAllTasks())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Deleted Successfully',\r\n            type: 'error'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className= 'container'>\r\n        <Paper className={classes.pageContent} >\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Task\"\r\n            className = {classes.searchInput}\r\n                        InputProps={{\r\n                    startAdornment:(<InputAdornment position=\"start\">\r\n                        <Search/> \r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n                    <Controls.Button\r\n                        text=\"Add New\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                            (<TableRow key={item.id}>\r\n                                <TableCell>{item.task}</TableCell>\r\n                                <TableCell>{item.allocatedTime}</TableCell>\r\n                                <TableCell>{item.category}</TableCell>\r\n                                <TableCell>{item.markComplete}</TableCell>\r\n                                <TableCell>\r\n                                    <Controls.ActionButton\r\n                                        color=\"primary\"\r\n                                            \r\n                                            onClick = {()=> {openInPopup(item)}}>\r\n                                                <EditOutlinedIcon fontSize=\"small\"/>\r\n                                    </Controls.ActionButton>\r\n                                    <Controls.ActionButton\r\n                                        color=\"secondary\"\r\n                                        onClick={() => {\r\n                                            setConfirmDialog({\r\n                                                isOpen: true,\r\n                                                        title:'Are you sure to delete this record?',\r\n                                                subTitle: \"You can't undo this operation\",\r\n                                                        onConfirm: () => {onDelete(item.id)}\r\n\r\n                                            })\r\n                                        }}>\r\n                                                <CloseIcon fontSize=\"small\"/>\r\n                                    </Controls.ActionButton>\r\n\r\n                                                    <br/> \r\n\r\n                                    <Controls.ActionButton\r\n                                        color=\"tertiary\"\r\n                                                onClick = {()=> {openInPopup(item)}}>\r\n                                                    <TimerIcon fontSize=\"small\"/>                                    \r\n                                    </Controls.ActionButton>\r\n\r\n                                    <Controls.ActionButton\r\n                                        color=\"tertiary\"\r\n                                                onClick = {()=> {addToCalendar(item)}}>\r\n                                                    <EventIcon fontSize=\"small\"/>                                    \r\n                                    </Controls.ActionButton>\r\n                                </TableCell>\r\n                            </TableRow>))\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n            <TblPagination/>            \r\n            </Paper>\r\n            <Popup\r\n            title = \"Task Form\"\r\n            openPopup = {openPopup}\r\n            setOpenPopup = {setOpenPopup}\r\n            >\r\n                <TableForm\r\n            recordForEdit = {recordForEdit}\r\n            addOrEdit={addOrEdit}/>\r\n            </Popup>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Timer\\TimerProc.js",[],["106","107"],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Timer\\Timer.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Categories\\Categories.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Loading\\Loading.jsx",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Header\\Header.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\TableForm\\TableForm.js",["108","109","110"],"import React, { useEffect } from 'react'\r\nimport { Grid, TextField } from '@material-ui/core'\r\nimport { useForm, Form } from '../useForm'\r\nimport Controls from '../controls/Controls'\r\nimport * as calendarTask from '../../categories/calendarTask'\r\n// import { format } from 'date-fns'\r\nimport moment from 'moment'\r\n// import { CollectionsOutlined } from '@material-ui/icons'\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    task: '',\r\n    allocatedTime: 0,\r\n    category: '',\r\n    markComplete: '0%'\r\n}\r\n\r\nexport default function TableForm(props) {\r\n    const {addOrEdit, recordForEdit} = props    \r\n    // let currTime = new Date();     \r\n    // let currTimePlus30Min = moment(currTime).add(30, 'm').toDate();\r\n    // let currTimeWithFormat = format(currTime, \"yyyy-MM-dd'T'HH:mm\"); \r\n    // let currTimeWithFormatPlus30Min = format(currTimePlus30Min, \"yyyy-MM-dd'T'HH:mm\"); \r\n\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = {...errors}\r\n        if('task' in fieldValues)\r\n        temp.task = fieldValues.task ? \"\" : \"This field is required\"      \r\n        if('category' in fieldValues)  \r\n        temp.category =  fieldValues.category.length !== 0 ? \"\" : \"This field is required.\"\r\n        \r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if(fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (validate()) {  \r\n            // let startDateMin = (values.startDate).substring(14, 16);\r\n            // let endDateMin = (values.endDate).substring(14, 16); \r\n            // let result = endDateMin - startDateMin; \r\n            // values.allocatedTime = `${Math.abs(result)}m`;\r\n            addOrEdit(values, resetForm);\r\n        }\r\n\r\n    }\r\n    // const onStartDateChange = e => {\r\n    //     values.startDate = e.target.value; \r\n    // }\r\n\r\n    // const onEndDateChange = e => { \r\n    //     values.endDate = e.target.value;     \r\n    // }\r\n\r\n    useEffect(()=>{ \r\n        if(recordForEdit !== null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"task\"\r\n                        label=\"Task\"\r\n                        value={values.task}\r\n                        onChange={handleInputChange}\r\n                        error={errors.task}\r\n                    />\r\n                        {/* <TextField\r\n                            variant=\"outlined\"\r\n                            name=\"startDate\"\r\n                            label=\"Start date\"\r\n                            type=\"datetime-local\"                                     \r\n                            defaultValue={currTimeWithFormat}     \r\n                            onChange={onStartDateChange}  \r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        /> */}\r\n \r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.Select\r\n                        name=\"category\"\r\n                        label=\"Category\"\r\n                        value={values.category}\r\n                        onChange={handleInputChange}\r\n                        options={calendarTask.getCategoryCollection()}\r\n                        error={errors.category}                        \r\n                    />\r\n                        {/* <TextField\r\n                            variant=\"outlined\"\r\n                            name=\"endDate\"\r\n                            label=\"End date\"                    \r\n                            type=\"datetime-local\"       \r\n                            onChange={onEndDateChange}                     \r\n                            defaultValue={currTimeWithFormatPlus30Min}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                         */}\r\n                    <br /><br />\r\n\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Add\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                        \r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Popup.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\Notification.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\ConfirmDialog.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\useTable.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\categories\\calendarTask.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Controls.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\useForm.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Button.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Input.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\Select.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\controls\\ActionButton.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\About\\About.js",[],"C:\\Users\\user\\Desktop\\Hackathon\\time-owner\\src\\components\\calendar\\Calendar.js",["111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":17,"column":10,"nodeType":"118","messageId":"119","endLine":17,"endColumn":30},{"ruleId":"116","severity":1,"message":"120","line":18,"column":10,"nodeType":"118","messageId":"119","endLine":18,"endColumn":14},{"ruleId":"112","replacedBy":"121"},{"ruleId":"114","replacedBy":"122"},{"ruleId":"116","severity":1,"message":"123","line":2,"column":16,"nodeType":"118","messageId":"119","endLine":2,"endColumn":25},{"ruleId":"116","severity":1,"message":"124","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":65,"column":8,"nodeType":"127","endLine":65,"endColumn":23,"suggestions":"128"},{"ruleId":"116","severity":1,"message":"129","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":26},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'relativeTimeRounding' is defined but never used.","Identifier","unusedVar","'blue' is defined but never used.",["130"],["131"],"'TextField' is defined but never used.","'moment' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["132"],"'SelectAllRounded' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"135","text":"136"},[2136,2151],"[recordForEdit, setValues]"]