[{"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\index.js":"1","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\App.js":"2","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\reportWebVitals.js":"3","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Header\\Header.js":"4","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Timer\\Timer.js":"5","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\TableForm\\TableForms.js":"6","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Timer\\TimerProc.js":"7","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\calendar\\Calendar.js":"8","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\About\\About.js":"9","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Loading\\Loading.jsx":"10","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Footer\\Footer.js":"11","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Categories\\Categories.js":"12","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\useTable.js":"13","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\TableForm\\TableForm.js":"14","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Notification.js":"15","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Popup.js":"16","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\ConfirmDialog.js":"17","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\controls\\Controls.js":"18","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\categories\\calendarTask.js":"19","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\useForm.js":"20","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\controls\\Button.js":"21","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\controls\\Input.js":"22","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\controls\\Select.js":"23","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\controls\\ActionButton.js":"24"},{"size":472,"mtime":1617156279313,"results":"25","hashOfConfig":"26"},{"size":2178,"mtime":1618169978180,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1617156279315,"results":"28","hashOfConfig":"26"},{"size":1078,"mtime":1618167831924,"results":"29","hashOfConfig":"26"},{"size":2205,"mtime":1617156279289,"results":"30","hashOfConfig":"26"},{"size":8330,"mtime":1618167831929,"results":"31","hashOfConfig":"26"},{"size":2196,"mtime":1617156279292,"results":"32","hashOfConfig":"26"},{"size":5792,"mtime":1618169974823,"results":"33","hashOfConfig":"26"},{"size":113,"mtime":1618167831920,"results":"34","hashOfConfig":"26"},{"size":790,"mtime":1617156279273,"results":"35","hashOfConfig":"26"},{"size":1366,"mtime":1618170608094,"results":"36","hashOfConfig":"26"},{"size":2374,"mtime":1618171713145,"results":"37","hashOfConfig":"26"},{"size":3803,"mtime":1618111129825,"results":"38","hashOfConfig":"26"},{"size":4847,"mtime":1618167831927,"results":"39","hashOfConfig":"26"},{"size":957,"mtime":1617156279277,"results":"40","hashOfConfig":"26"},{"size":1322,"mtime":1617156279279,"results":"41","hashOfConfig":"26"},{"size":2186,"mtime":1617156279261,"results":"42","hashOfConfig":"26"},{"size":249,"mtime":1617156279308,"results":"43","hashOfConfig":"26"},{"size":1518,"mtime":1617156279256,"results":"44","hashOfConfig":"26"},{"size":1202,"mtime":1617156279311,"results":"45","hashOfConfig":"26"},{"size":768,"mtime":1617156279307,"results":"46","hashOfConfig":"26"},{"size":478,"mtime":1617156279309,"results":"47","hashOfConfig":"26"},{"size":940,"mtime":1617156279310,"results":"48","hashOfConfig":"26"},{"size":982,"mtime":1617156279306,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"12wq1qw",{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\index.js",[],["103","104"],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\App.js",["105","106","107"],"import React, { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport './App.css';\r\nimport Header from './components/Header/Header'\r\nimport Footer from './components/Footer/Footer'\r\nimport Loading from './components/Loading/Loading'\r\nimport Calendar from './components/calendar/Calendar'\r\nimport TableForms from './components/TableForm/TableForms'\r\nimport Categories from './components/Categories/Categories';\r\nimport Timer from './components/Timer/Timer'\r\nimport TimerProc from './components/Timer/TimerProc'\r\nimport About from './components/About/About'\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 20);\r\n  })\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        {\r\n          isLoading ?\r\n            <Loading />\r\n            :\r\n            <div>\r\n              <Header />\r\n              <Switch>\r\n              <Route path=\"/about\" component={About}/>\r\n                <Route path=\"/\">\r\n                  <div className=\"right-half\">       \r\n                    <div className=\"calendar-container\">\r\n                      <Calendar />\r\n                    </div>\r\n                   {/* ON HOLD \r\n                      <Timer/>\r\n                      <TimerProc /> \r\n                         ON HOLD */}\r\n                  </div>\r\n\r\n                  <br />\r\n                  <div className=\"left-half\">\r\n                    {/* <div className=\"WeeklyGoals-container\">\r\n                      <WeeklyGoalsList />\r\n                    </div> */}\r\n                    \r\n                    <div className=\"table-container\">\r\n                      <TableForms />\r\n                    </div>\r\n                   \r\n                  </div>\r\n                </Route>\r\n\r\n                <Route path=\"/login\">\r\n\r\n                </Route>\r\n                \r\n                      \r\n\r\n                <Route path=\"/contact\">\r\n\r\n                </Route>\r\n                </Switch>\r\n              <Footer />\r\n            </div>\r\n        }\r\n      </div>\r\n    </Router>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\reportWebVitals.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Header\\Header.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Timer\\Timer.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\TableForm\\TableForms.js",["108","109"],"import React, {useState} from 'react'\r\nimport TableForm from './TableForm'\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core'\r\nimport useTable from \"../../components/useTable\"\r\nimport * as calendarTask from '../../categories/calendarTask'\r\nimport Controls from \"../../components/controls/Controls\"\r\nimport { Search } from \"@material-ui/icons\"\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Popup from '../Popup';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Notification from \"../Notification\"\r\nimport ConfirmDialog from \"../ConfirmDialog\"\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport { changeTileColor, time} from '../../components/calendar/Calendar'\r\nimport { relativeTimeRounding } from 'moment'\r\nimport { blue } from '@material-ui/core/colors';\r\nimport './TableForm.scss';\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    pageContent: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n        \r\n        \r\n    },\r\n    searchInput: {\r\n        width: '560px',\r\n        position: 'relative',\r\n        color:'red',\r\n        display: 'flex',\r\n        \r\n    },\r\n    \r\n    newButton : {\r\n        position: 'relative',\r\n        left: 1,\r\n        display: 'flex',\r\n        height: '55px',\r\n        width: '100px'\r\n    },\r\n}))\r\n\r\nconst headCells = [\r\n    {id: 'task' , label:'Task Name'},\r\n    {id: 'time' , label:'Total Allocated Time'},\r\n    {id: 'category' , label:'Category'},\r\n    {id: 'complete', label:\"Mark Complete\"},\r\n    {id: 'actions', label:'Actions', disableSorting: true}\r\n]\r\n\r\nexport default function TableForms() {\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null);\r\n    const [records, setRecords] = useState(calendarTask.getAllTasks());\r\n    const [filterFn, setFilterFn] = useState({fn:items => {return items;}})\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [notify, setNotify] = useState({isOpen: false, message:'', type:''})\r\n    const [confirmDialog, setConfirmDialog] = useState({isOpen:false, title:'', subTitle:''})\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    }=useTable(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn:items => {\r\n                if(target.value === \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.task.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const addOrEdit = (task, resetForm) => {\r\n        if (task.id === 0) {\r\n            calendarTask.insertNewTask(task)\r\n        }\r\n        else {\r\n            calendarTask.updateTask(task)\r\n            resetForm()\r\n            setRecordForEdit(null)\r\n            setOpenPopup(false)\r\n            setRecords(calendarTask.getAllTasks())\r\n            setNotify({\r\n                isOpen: true,\r\n                message: 'Submitted Successfully',\r\n                type: 'success'\r\n            })\r\n        }\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const addToCalendar = item => {\r\n        changeTileColor(item.task, item.category);\r\n        item.allocatedTime = `${time}m`;\r\n        calendarTask.updateTask(item);\r\n        setRecords(calendarTask.getAllTasks());\r\n\r\n    }\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        calendarTask.deleteTask(id);\r\n        setRecords(calendarTask.getAllTasks())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Deleted Successfully',\r\n            type: 'error'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className= 'container'>\r\n        <Paper className={classes.pageContent} >\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Task\"\r\n            className = {classes.searchInput}\r\n                        InputProps={{\r\n                    startAdornment:(<InputAdornment position=\"start\">\r\n                        <Search/> \r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n                    <Controls.Button\r\n                        text=\"Add New\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                            (<TableRow key={item.id}>\r\n                                <TableCell>{item.task}</TableCell>\r\n                                <TableCell>{item.allocatedTime}</TableCell>\r\n                                <TableCell>{item.category}</TableCell>\r\n                                <TableCell>{item.markComplete}</TableCell>\r\n                                <TableCell>\r\n                                    <Controls.ActionButton\r\n                                        color=\"primary\"\r\n                                            \r\n                                            onClick = {()=> {openInPopup(item)}}>\r\n                                                <EditOutlinedIcon fontSize=\"small\"/>\r\n                                    </Controls.ActionButton>\r\n                                    <Controls.ActionButton\r\n                                        color=\"secondary\"\r\n                                        onClick={() => {\r\n                                            setConfirmDialog({\r\n                                                isOpen: true,\r\n                                                        title:'Are you sure to delete this record?',\r\n                                                subTitle: \"You can't undo this operation\",\r\n                                                        onConfirm: () => {onDelete(item.id)}\r\n\r\n                                            })\r\n                                        }}>\r\n                                                <CloseIcon fontSize=\"small\"/>\r\n                                    </Controls.ActionButton>\r\n\r\n                                                    <br/> \r\n\r\n                                    <Controls.ActionButton\r\n                                        color=\"tertiary\"\r\n                                                onClick = {()=> {openInPopup(item)}}>\r\n                                                    <TimerIcon fontSize=\"small\"/>                                    \r\n                                    </Controls.ActionButton>\r\n\r\n                                    <Controls.ActionButton\r\n                                        color=\"tertiary\"\r\n                                                onClick = {()=> {addToCalendar(item)}}>\r\n                                                    <EventIcon fontSize=\"small\"/>                                    \r\n                                    </Controls.ActionButton>\r\n                                </TableCell>\r\n                            </TableRow>))\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n            <TblPagination/>            \r\n            </Paper>\r\n            <Popup\r\n            title = \"Task Form\"\r\n            openPopup = {openPopup}\r\n            setOpenPopup = {setOpenPopup}\r\n            >\r\n                <TableForm\r\n            recordForEdit = {recordForEdit}\r\n            addOrEdit={addOrEdit}/>\r\n            </Popup>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Timer\\TimerProc.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\calendar\\Calendar.js",["110","111","112","113"],"import React from 'react';\r\nimport './Calendar.css';\r\n\r\nconst eventContainer = [];\r\nexport let time = [];\r\n\r\nconst handleClick=(e)=> {\r\n    let a = e.target.style.backgroundColor;\r\n\r\n    if (a === \"\" || a === \"white\") {\r\n        e.target.style.backgroundColor = '#CDCDCD';\r\n        eventContainer.push(e);\r\n    } else {\r\n        e.target.style.backgroundColor = 'white';\r\n        e.target.innerHTML = \"\";\r\n        eventContainer.pop(e);\r\n    }\r\n\r\n}\r\n\r\nexport function handleCategoryHighlight(e) {\r\n    let temp = e.target.style.backgroundColor;\r\n    for (let i = 0; i < eventContainer.length; i++) {\r\n        switch(temp){\r\n            case 'deepskyblue':\r\n            eventContainer[i].target.style.backgroundColor = '#00bfff';\r\n            break;\r\n            case 'pink':\r\n            eventContainer[i].target.style.backgroundColor = '#ffc0cb';\r\n            break;\r\n            case 'mediumspringgreen':\r\n            eventContainer[i].target.style.backgroundColor = '#00fa9a';\r\n            break;\r\n            case  'lightcoral':\r\n            eventContainer[i].target.style.backgroundColor = '#f08080'; \r\n            break;\r\n        default:\r\n            console.log('There was a error with background color');\r\n        }\r\n    }\r\n}\r\n\r\nexport function changeTileColor(task, category) {\r\n    let prev = time;\r\n    let count = 0;\r\n    console.log(prev);\r\n    const colorBlox = \"rgb(205, 205, 205)\";\r\n    for (let i = 0; i < eventContainer.length; i++) {\r\n\r\n        let temp = eventContainer[i].target.style.backgroundColor;\r\n        if(temp === colorBlox){\r\n            switch(category){\r\n                case \"Work\":\r\n                    \r\n                    eventContainer[i].target.style.backgroundColor = '#00bfff';\r\n                    eventContainer[i].target.innerHTML = task;   \r\n                break;\r\n                case \"Family\":\r\n                    eventContainer[i].target.style.backgroundColor = '#ffff00';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n                case \"Education\":\r\n                    eventContainer[i].target.style.backgroundColor = '#00fa9a';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n                case \"Entertainment\":\r\n                    eventContainer[i].target.style.backgroundColor = '#f08080';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n                case \"Routine\":\r\n                    eventContainer[i].target.style.backgroundColor = '#d3d3d3';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n                case \"Friends\":\r\n                    eventContainer[i].target.style.backgroundColor = '#ffc0cb';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n                case \"Health\":\r\n                    eventContainer[i].target.style.backgroundColor = '#ffd700';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n                case \"Hobby\":\r\n                    eventContainer[i].target.style.backgroundColor = '#dda0dd';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n            default:\r\n                console.log('There were errors with category and temp variables');\r\n            }\r\n        }         \r\n    }\r\n     (count === 0) ? time = (eventContainer.length * 10): time = (eventContainer.length * 10) - prev;\r\n     count++;\r\n}\r\n\r\nconst Calendar = () => {\r\n\r\n\r\n    const timeZone = [\r\n        {\r\n            title: '9:00'\r\n        },\r\n        {\r\n            title: '10:00'\r\n        },\r\n        {\r\n            title: '11:00'\r\n        },\r\n        {\r\n            title: '12:00'\r\n        },\r\n        {\r\n            title: '13:00'\r\n        },\r\n        {\r\n            title: '14:00'\r\n        },\r\n        {\r\n            title: '15:00'\r\n        },\r\n        {\r\n            title: '16:00'\r\n        },\r\n        {\r\n            title: '17:00'\r\n        },\r\n        {\r\n            title: '18:00'\r\n        },\r\n        {\r\n            title: '19:00'\r\n        },\r\n        {\r\n            title: '20:00'\r\n        },\r\n        {\r\n            title: '21:00'\r\n        },\r\n        {\r\n            title: '22:00'\r\n        },\r\n        {\r\n            title: '23:00'\r\n        },\r\n        {\r\n            title: '24:00'\r\n        },\r\n    ];\r\n\r\n    let now = new Date();\r\n    let dname = now.getDay(),\r\n    mo = now.getMonth(),\r\n    dnum = now.getDate(),\r\n    yr = now.getFullYear();\r\n    \r\n    let today = document.querySelector(\"#today\");\r\n    console.log(today);\r\n\r\n    \r\n\r\n    const timeZoneButton = timeZone.map((time, index) => {        \r\n\r\n       return  <div className=\"time-zone\">{time.title}</div>\r\n     });\r\n  \r\n        \r\n    return (\r\n        <div>\r\n\r\n            <input type=\"time\"/>\r\n            <input type=\"submit\" className=\"time-selector\" value=\"select time\"/>\r\n        \r\n            <div className=\"date-container\">\r\n                 <div className=\"datetime\">\r\n                    <div className=\"date\">\r\n                    <i class=\"fas fa-arrow-left\"></i>\r\n                        <span id=\"today\" >2021-04-10</span>                       \r\n                    <i class=\"fas fa-arrow-right\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"calendar\">\r\n                <div className=\"time-stamp\">\r\n                {timeZoneButton}\r\n                </div>\r\n                <div className=\"vertical\"></div>\r\n                <div class=\"flex-row-container\">\r\n            {  [...Array(138)].map((x, i) =>   <div className=\"flex-row-item\" onClick={handleClick}></div>)}\r\n                </div> \r\n            </div>\r\n        </div>\r\n    ) \r\n    \r\n    \r\n}\r\n\r\nexport default Calendar;","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\About\\About.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Loading\\Loading.jsx",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Categories\\Categories.js",["114","115","116"],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\useTable.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\TableForm\\TableForm.js",["117","118","119"],"import React, { useEffect } from 'react'\r\nimport { Grid, TextField } from '@material-ui/core'\r\nimport { useForm, Form } from '../useForm'\r\nimport Controls from '../controls/Controls'\r\nimport * as calendarTask from '../../categories/calendarTask'\r\n// import { format } from 'date-fns'\r\nimport moment from 'moment'\r\n// import { CollectionsOutlined } from '@material-ui/icons'\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    task: '',\r\n    allocatedTime: 0,\r\n    category: '',\r\n    markComplete: '0%'\r\n}\r\n\r\nexport default function TableForm(props) {\r\n    const {addOrEdit, recordForEdit} = props    \r\n    // let currTime = new Date();     \r\n    // let currTimePlus30Min = moment(currTime).add(30, 'm').toDate();\r\n    // let currTimeWithFormat = format(currTime, \"yyyy-MM-dd'T'HH:mm\"); \r\n    // let currTimeWithFormatPlus30Min = format(currTimePlus30Min, \"yyyy-MM-dd'T'HH:mm\"); \r\n\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = {...errors}\r\n        if('task' in fieldValues)\r\n        temp.task = fieldValues.task ? \"\" : \"This field is required\"      \r\n        if('category' in fieldValues)  \r\n        temp.category =  fieldValues.category.length !== 0 ? \"\" : \"This field is required.\"\r\n        \r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if(fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (validate()) {  \r\n            // let startDateMin = (values.startDate).substring(14, 16);\r\n            // let endDateMin = (values.endDate).substring(14, 16); \r\n            // let result = endDateMin - startDateMin; \r\n            // values.allocatedTime = `${Math.abs(result)}m`;\r\n            addOrEdit(values, resetForm);\r\n        }\r\n\r\n    }\r\n    // const onStartDateChange = e => {\r\n    //     values.startDate = e.target.value; \r\n    // }\r\n\r\n    // const onEndDateChange = e => { \r\n    //     values.endDate = e.target.value;     \r\n    // }\r\n\r\n    useEffect(()=>{ \r\n        if(recordForEdit !== null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"task\"\r\n                        label=\"Task\"\r\n                        value={values.task}\r\n                        onChange={handleInputChange}\r\n                        error={errors.task}\r\n                    />\r\n                        {/* <TextField\r\n                            variant=\"outlined\"\r\n                            name=\"startDate\"\r\n                            label=\"Start date\"\r\n                            type=\"datetime-local\"                                     \r\n                            defaultValue={currTimeWithFormat}     \r\n                            onChange={onStartDateChange}  \r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        /> */}\r\n \r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.Select\r\n                        name=\"category\"\r\n                        label=\"Category\"\r\n                        value={values.category}\r\n                        onChange={handleInputChange}\r\n                        options={calendarTask.getCategoryCollection()}\r\n                        error={errors.category}                        \r\n                    />\r\n                        {/* <TextField\r\n                            variant=\"outlined\"\r\n                            name=\"endDate\"\r\n                            label=\"End date\"                    \r\n                            type=\"datetime-local\"       \r\n                            onChange={onEndDateChange}                     \r\n                            defaultValue={currTimeWithFormatPlus30Min}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                         */}\r\n                    <br /><br />\r\n\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Add\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                        \r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Notification.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\Popup.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\ConfirmDialog.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\controls\\Controls.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\categories\\calendarTask.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\useForm.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\controls\\Button.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\controls\\Input.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\controls\\Select.js",[],"C:\\Users\\esakhnov\\Documents\\GITHUB\\time-owner\\src\\components\\controls\\ActionButton.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":9,"column":8,"nodeType":"126","messageId":"127","endLine":9,"endColumn":18},{"ruleId":"124","severity":1,"message":"128","line":10,"column":8,"nodeType":"126","messageId":"127","endLine":10,"endColumn":13},{"ruleId":"124","severity":1,"message":"129","line":11,"column":8,"nodeType":"126","messageId":"127","endLine":11,"endColumn":17},{"ruleId":"124","severity":1,"message":"130","line":17,"column":10,"nodeType":"126","messageId":"127","endLine":17,"endColumn":30},{"ruleId":"124","severity":1,"message":"131","line":18,"column":10,"nodeType":"126","messageId":"127","endLine":18,"endColumn":14},{"ruleId":"124","severity":1,"message":"132","line":150,"column":9,"nodeType":"126","messageId":"127","endLine":150,"endColumn":14},{"ruleId":"124","severity":1,"message":"133","line":151,"column":5,"nodeType":"126","messageId":"127","endLine":151,"endColumn":7},{"ruleId":"124","severity":1,"message":"134","line":152,"column":5,"nodeType":"126","messageId":"127","endLine":152,"endColumn":9},{"ruleId":"124","severity":1,"message":"135","line":153,"column":5,"nodeType":"126","messageId":"127","endLine":153,"endColumn":7},{"ruleId":"124","severity":1,"message":"136","line":10,"column":12,"nodeType":"126","messageId":"127","endLine":10,"endColumn":17},{"ruleId":"124","severity":1,"message":"137","line":11,"column":12,"nodeType":"126","messageId":"127","endLine":11,"endColumn":19},{"ruleId":"124","severity":1,"message":"138","line":12,"column":12,"nodeType":"126","messageId":"127","endLine":12,"endColumn":21},{"ruleId":"124","severity":1,"message":"139","line":2,"column":16,"nodeType":"126","messageId":"127","endLine":2,"endColumn":25},{"ruleId":"124","severity":1,"message":"140","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":14},{"ruleId":"141","severity":1,"message":"142","line":65,"column":8,"nodeType":"143","endLine":65,"endColumn":23,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'Categories' is defined but never used.","Identifier","unusedVar","'Timer' is defined but never used.","'TimerProc' is defined but never used.","'relativeTimeRounding' is defined but never used.","'blue' is defined but never used.","'dname' is assigned a value but never used.","'mo' is assigned a value but never used.","'dnum' is assigned a value but never used.","'yr' is assigned a value but never used.","'color' is assigned a value but never used.","'content' is assigned a value but never used.","'className' is assigned a value but never used.","'TextField' is defined but never used.","'moment' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"150","text":"151"},[2136,2151],"[recordForEdit, setValues]"]