[{"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\index.js":"1","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\App.js":"2","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\reportWebVitals.js":"3","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Footer\\Footer.js":"4","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Header\\Header.js":"5","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\calendar\\Calendar.js":"6","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Categories\\Categories.js":"7","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\TableForm\\TableForms.js":"8","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Statistics\\Statistics.js":"9","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Timer\\Timer.js":"10","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Timer\\TimerProc.js":"11","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\About\\About.js":"12","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Loading\\Loading.jsx":"13","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\TableForm\\TableForm.js":"14","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\useTable.js":"15","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Popup.js":"16","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Notification.js":"17","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\ConfirmDialog.js":"18","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\categories\\calendarTask.js":"19","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\controls\\Controls.js":"20","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\useForm.js":"21","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\controls\\Select.js":"22","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\controls\\Button.js":"23","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\controls\\Input.js":"24","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\controls\\ActionButton.js":"25","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Login\\Login.js":"26"},{"size":472,"mtime":1618246119289,"results":"27","hashOfConfig":"28"},{"size":2296,"mtime":1618252283459,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1618246119290,"results":"30","hashOfConfig":"28"},{"size":1413,"mtime":1618250067484,"results":"31","hashOfConfig":"28"},{"size":1226,"mtime":1618250067486,"results":"32","hashOfConfig":"28"},{"size":5833,"mtime":1618250067492,"results":"33","hashOfConfig":"28"},{"size":798,"mtime":1618250067483,"results":"34","hashOfConfig":"28"},{"size":8330,"mtime":1618250067489,"results":"35","hashOfConfig":"28"},{"size":10420,"mtime":1618250067488,"results":"36","hashOfConfig":"28"},{"size":2205,"mtime":1618246119280,"results":"37","hashOfConfig":"28"},{"size":2196,"mtime":1618246119281,"results":"38","hashOfConfig":"28"},{"size":11379,"mtime":1618246119251,"results":"39","hashOfConfig":"28"},{"size":790,"mtime":1618246119273,"results":"40","hashOfConfig":"28"},{"size":2898,"mtime":1618246119278,"results":"41","hashOfConfig":"28"},{"size":3803,"mtime":1618250067493,"results":"42","hashOfConfig":"28"},{"size":1322,"mtime":1618246119275,"results":"43","hashOfConfig":"28"},{"size":957,"mtime":1618246119275,"results":"44","hashOfConfig":"28"},{"size":2186,"mtime":1618246119268,"results":"45","hashOfConfig":"28"},{"size":1518,"mtime":1618246119247,"results":"46","hashOfConfig":"28"},{"size":249,"mtime":1618246119286,"results":"47","hashOfConfig":"28"},{"size":1202,"mtime":1618246119288,"results":"48","hashOfConfig":"28"},{"size":940,"mtime":1618246119287,"results":"49","hashOfConfig":"28"},{"size":768,"mtime":1618246119286,"results":"50","hashOfConfig":"28"},{"size":478,"mtime":1618246119287,"results":"51","hashOfConfig":"28"},{"size":982,"mtime":1618246119286,"results":"52","hashOfConfig":"28"},{"size":2260,"mtime":1618252625632,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1gbhhpc",{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\index.js",[],["113","114"],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\App.js",["115","116","117"],"import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Footer from './components/Footer/Footer';\r\nimport Loading from './components/Loading/Loading';\r\nimport Calendar from './components/calendar/Calendar';\r\nimport TableForms from './components/TableForm/TableForms';\r\nimport Categories from './components/Categories/Categories';\r\nimport Timer from './components/Timer/Timer';\r\nimport TimerProc from './components/Timer/TimerProc';\r\nimport About from './components/About/About';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Login from './components/Login/Login';\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 20);\r\n  });\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <div>\r\n            <Header />\r\n            <Switch>\r\n              <Route path=\"/about\" component={About} />\r\n              <Route path=\"/statistics\" component={Statistics} />\r\n              <Route path=\"/login\" component={Login} />\r\n\r\n              <Route path=\"/\">\r\n                <div className=\"right-half\">\r\n                  <div className=\"calendar-container\">\r\n                    <Calendar />\r\n                  </div>\r\n\r\n                  {/* ON HOLD \r\n                      <Timer/>\r\n                      <TimerProc /> \r\n                         ON HOLD */}\r\n                </div>\r\n\r\n                <br />\r\n                <div className=\"left-half\">\r\n                  {/* <div className=\"WeeklyGoals-container\">\r\n                      <WeeklyGoalsList />\r\n                    </div> */}\r\n\r\n                  <div className=\"timer-container\"></div>\r\n                  <div className=\"table-container\">\r\n                    <TableForms />\r\n                  </div>\r\n                </div>\r\n              </Route>\r\n\r\n              <Route path=\"/login\"></Route>\r\n\r\n              <Route path=\"/contact\"></Route>\r\n            </Switch>\r\n            <Footer />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\reportWebVitals.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Header\\Header.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\calendar\\Calendar.js",["118","119","120","121"],"import React from 'react';\r\nimport './Calendar.css';\r\n\r\nconst eventContainer = [];\r\nexport let time = [];\r\n\r\nconst handleClick=(e)=> {\r\n    let a = e.target.style.backgroundColor;\r\n\r\n    if (a === \"\" || a === \"white\") {\r\n        e.target.style.backgroundColor = '#CDCDCD';\r\n        eventContainer.push(e);\r\n    } else {\r\n        e.target.style.backgroundColor = 'white';\r\n        e.target.innerHTML = \"\";\r\n        eventContainer.pop(e);\r\n    }\r\n\r\n}\r\n\r\nexport function handleCategoryHighlight(e) {\r\n    let temp = e.target.style.backgroundColor;\r\n    for (let i = 0; i < eventContainer.length; i++) {\r\n        switch(temp){\r\n            case 'deepskyblue':\r\n            eventContainer[i].target.style.backgroundColor = '#00bfff';\r\n            break;\r\n            case 'pink':\r\n            eventContainer[i].target.style.backgroundColor = '#ffc0cb';\r\n            break;\r\n            case 'mediumspringgreen':\r\n            eventContainer[i].target.style.backgroundColor = '#00fa9a';\r\n            break;\r\n            case  'lightcoral':\r\n            eventContainer[i].target.style.backgroundColor = '#f08080'; \r\n            break;\r\n        default:\r\n            console.log('There was a error with background color');\r\n        }\r\n    }\r\n}\r\n\r\nexport function changeTileColor(task, category) {\r\n    let prev = time;\r\n    let count = 0;\r\n    console.log(prev);\r\n    const colorBlox = \"rgb(205, 205, 205)\";\r\n    for (let i = 0; i < eventContainer.length; i++) {\r\n\r\n        let temp = eventContainer[i].target.style.backgroundColor;\r\n        if(temp === colorBlox){\r\n            switch(category){\r\n                case \"Work\":\r\n                    \r\n                    eventContainer[i].target.style.backgroundColor = '#00bfff';\r\n                    eventContainer[i].target.innerHTML = task;   \r\n                break;\r\n                case \"Family\":\r\n                    eventContainer[i].target.style.backgroundColor = '#ffff00';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n                case \"Education\":\r\n                    eventContainer[i].target.style.backgroundColor = '#00fa9a';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n                case \"Entertainment\":\r\n                    eventContainer[i].target.style.backgroundColor = '#f08080';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n                case \"Routine\":\r\n                    eventContainer[i].target.style.backgroundColor = '#d3d3d3';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n                case \"Friends\":\r\n                    eventContainer[i].target.style.backgroundColor = '#ffc0cb';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n                case \"Health\":\r\n                    eventContainer[i].target.style.backgroundColor = '#ffd700';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n                case \"Hobby\":\r\n                    eventContainer[i].target.style.backgroundColor = '#dda0dd';\r\n                    eventContainer[i].target.innerHTML = task;\r\n                break;\r\n            default:\r\n                console.log('There were errors with category and temp variables');\r\n            }\r\n        }         \r\n    }\r\n     (count === 0) ? time = (eventContainer.length * 10): time = (eventContainer.length * 10) - prev;\r\n     count++;\r\n}\r\n\r\nconst Calendar = () => {\r\n\r\n\r\n    const timeZone = [\r\n        {\r\n            title: '9:00'\r\n        },\r\n        {\r\n            title: '10:00'\r\n        },\r\n        {\r\n            title: '11:00'\r\n        },\r\n        {\r\n            title: '12:00'\r\n        },\r\n        {\r\n            title: '13:00'\r\n        },\r\n        {\r\n            title: '14:00'\r\n        },\r\n        {\r\n            title: '15:00'\r\n        },\r\n        {\r\n            title: '16:00'\r\n        },\r\n        {\r\n            title: '17:00'\r\n        },\r\n        {\r\n            title: '18:00'\r\n        },\r\n        {\r\n            title: '19:00'\r\n        },\r\n        {\r\n            title: '20:00'\r\n        },\r\n        {\r\n            title: '21:00'\r\n        },\r\n        {\r\n            title: '22:00'\r\n        },\r\n        {\r\n            title: '23:00'\r\n        },\r\n        {\r\n            title: '24:00'\r\n        },\r\n    ];\r\n\r\n    let now = new Date();\r\n    let dname = now.getDay(),\r\n    mo = now.getMonth(),\r\n    dnum = now.getDate(),\r\n    yr = now.getFullYear();\r\n    \r\n    // let today = document.getElementById(\"#today\");\r\n    // console.log(today);\r\n    // today.innerText = `ssdass`;\r\n    \r\n\r\n    const timeZoneButton = timeZone.map((time, index) => {        \r\n\r\n       return  <div className=\"time-zone\">{time.title}</div>\r\n     });\r\n  \r\n        \r\n    return (\r\n        <div>\r\n\r\n            <input type=\"time\"/>\r\n            <input type=\"submit\" className=\"time-selector\" value=\"select time\"/>\r\n        \r\n            <div className=\"date-container\">\r\n                 <div className=\"datetime\">\r\n                    <div className=\"date\">\r\n                    <i class=\"fas fa-arrow-left\"></i>\r\n                        <span id=\"today\" >2021-04-10</span>                       \r\n                    <i class=\"fas fa-arrow-right\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"calendar\">\r\n                <div className=\"time-stamp\">\r\n                {timeZoneButton}\r\n                </div>\r\n                <div className=\"vertical\"></div>\r\n                <div class=\"flex-row-container\">\r\n            {  [...Array(138)].map((x, i) =>   <div className=\"flex-row-item\" onClick={handleClick}></div>)}\r\n                </div> \r\n            </div>\r\n        </div>\r\n    ) \r\n    \r\n    \r\n}\r\n\r\nexport default Calendar;","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Categories\\Categories.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\TableForm\\TableForms.js",["122","123"],"import React, {useState} from 'react'\r\nimport TableForm from './TableForm'\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core'\r\nimport useTable from \"../../components/useTable\"\r\nimport * as calendarTask from '../../categories/calendarTask'\r\nimport Controls from \"../../components/controls/Controls\"\r\nimport { Search } from \"@material-ui/icons\"\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Popup from '../Popup';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Notification from \"../Notification\"\r\nimport ConfirmDialog from \"../ConfirmDialog\"\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport { changeTileColor, time} from '../../components/calendar/Calendar'\r\nimport { relativeTimeRounding } from 'moment'\r\nimport { blue } from '@material-ui/core/colors';\r\nimport './TableForm.scss';\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    pageContent: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n        \r\n        \r\n    },\r\n    searchInput: {\r\n        width: '560px',\r\n        position: 'relative',\r\n        color:'red',\r\n        display: 'flex',\r\n        \r\n    },\r\n    \r\n    newButton : {\r\n        position: 'relative',\r\n        left: 1,\r\n        display: 'flex',\r\n        height: '55px',\r\n        width: '100px'\r\n    },\r\n}))\r\n\r\nconst headCells = [\r\n    {id: 'task' , label:'Task Name'},\r\n    {id: 'time' , label:'Total Allocated Time'},\r\n    {id: 'category' , label:'Category'},\r\n    {id: 'complete', label:\"Mark Complete\"},\r\n    {id: 'actions', label:'Actions', disableSorting: true}\r\n]\r\n\r\nexport default function TableForms() {\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null);\r\n    const [records, setRecords] = useState(calendarTask.getAllTasks());\r\n    const [filterFn, setFilterFn] = useState({fn:items => {return items;}})\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [notify, setNotify] = useState({isOpen: false, message:'', type:''})\r\n    const [confirmDialog, setConfirmDialog] = useState({isOpen:false, title:'', subTitle:''})\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    }=useTable(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn:items => {\r\n                if(target.value === \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.task.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const addOrEdit = (task, resetForm) => {\r\n        if (task.id === 0) {\r\n            calendarTask.insertNewTask(task)\r\n        }\r\n        else {\r\n            calendarTask.updateTask(task)\r\n            resetForm()\r\n            setRecordForEdit(null)\r\n            setOpenPopup(false)\r\n            setRecords(calendarTask.getAllTasks())\r\n            setNotify({\r\n                isOpen: true,\r\n                message: 'Submitted Successfully',\r\n                type: 'success'\r\n            })\r\n        }\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const addToCalendar = item => {\r\n        changeTileColor(item.task, item.category);\r\n        item.allocatedTime = `${time}m`;\r\n        calendarTask.updateTask(item);\r\n        setRecords(calendarTask.getAllTasks());\r\n\r\n    }\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        calendarTask.deleteTask(id);\r\n        setRecords(calendarTask.getAllTasks())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Deleted Successfully',\r\n            type: 'error'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className= 'container'>\r\n        <Paper className={classes.pageContent} >\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Task\"\r\n            className = {classes.searchInput}\r\n                        InputProps={{\r\n                    startAdornment:(<InputAdornment position=\"start\">\r\n                        <Search/> \r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n                    <Controls.Button\r\n                        text=\"Add New\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                            (<TableRow key={item.id}>\r\n                                <TableCell>{item.task}</TableCell>\r\n                                <TableCell>{item.allocatedTime}</TableCell>\r\n                                <TableCell>{item.category}</TableCell>\r\n                                <TableCell>{item.markComplete}</TableCell>\r\n                                <TableCell>\r\n                                    <Controls.ActionButton\r\n                                        color=\"primary\"\r\n                                            \r\n                                            onClick = {()=> {openInPopup(item)}}>\r\n                                                <EditOutlinedIcon fontSize=\"small\"/>\r\n                                    </Controls.ActionButton>\r\n                                    <Controls.ActionButton\r\n                                        color=\"secondary\"\r\n                                        onClick={() => {\r\n                                            setConfirmDialog({\r\n                                                isOpen: true,\r\n                                                        title:'Are you sure to delete this record?',\r\n                                                subTitle: \"You can't undo this operation\",\r\n                                                        onConfirm: () => {onDelete(item.id)}\r\n\r\n                                            })\r\n                                        }}>\r\n                                                <CloseIcon fontSize=\"small\"/>\r\n                                    </Controls.ActionButton>\r\n\r\n                                                    <br/> \r\n\r\n                                    <Controls.ActionButton\r\n                                        color=\"tertiary\"\r\n                                                onClick = {()=> {openInPopup(item)}}>\r\n                                                    <TimerIcon fontSize=\"small\"/>                                    \r\n                                    </Controls.ActionButton>\r\n\r\n                                    <Controls.ActionButton\r\n                                        color=\"tertiary\"\r\n                                                onClick = {()=> {addToCalendar(item)}}>\r\n                                                    <EventIcon fontSize=\"small\"/>                                    \r\n                                    </Controls.ActionButton>\r\n                                </TableCell>\r\n                            </TableRow>))\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n            <TblPagination/>            \r\n            </Paper>\r\n            <Popup\r\n            title = \"Task Form\"\r\n            openPopup = {openPopup}\r\n            setOpenPopup = {setOpenPopup}\r\n            >\r\n                <TableForm\r\n            recordForEdit = {recordForEdit}\r\n            addOrEdit={addOrEdit}/>\r\n            </Popup>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Statistics\\Statistics.js",["124","125"],"import React, { Component } from 'react';\r\nimport './Statistics.css';\r\nimport { Bar, Pie, defaults } from 'react-chartjs-2'\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\ndefaults.global.legend.labels.boxWidth = 100;\r\ndefaults.global.legend.labels.fontSize = 20;\r\n\r\nconst Statistics = () => {\r\n    return (\r\n\r\n    \r\n\r\n            <div>\r\n           \r\n\r\n                        <div class = \"pieCharts\">\r\n\r\n                            <div class = \"dailyPie\">\r\n                                            <h1 style={{color: \"black\"}}>Daily Statistics</h1>\r\n                                        <Pie\r\n                                            data = {{\r\n                                            labels: ['Sleep', 'Work', 'Hobby'],\r\n                                            datasets: [{\r\n                                                label: '# of Votes',\r\n                                                data: [12, 19, 3],\r\n\r\n\r\n                                                backgroundColor: [\r\n                                                    'rgb(255, 99, 132)',\r\n                                                    'rgb(54, 162, 235)',\r\n                                                    'rgb(255, 205, 86)'\r\n                                                    ],\r\n                                                    hoverOffset: 4\r\n\r\n                                            }]\r\n                                        }}\r\n                                        height = {200}\r\n                                        width = {100}\r\n                                        options = {{\r\n                                            maintainAspectRatio: false,\r\n\r\n\r\n                                            layout: {\r\n                                                padding: {\r\n                                                    top: 20,\r\n                                                    \r\n                                                }\r\n                                            }\r\n                                        }}\r\n\r\n                                        />\r\n  \r\n                             </div>\r\n\r\n                                    <div class = \"dailyPie\">\r\n                                    <h1 style={{color: \"black\"}}>Weekly Statistics</h1>\r\n                                    <Pie\r\n                                    data = {{\r\n                                        labels: ['Sleep', 'Work', 'Hobby'],\r\n                                        datasets: [{\r\n                                            label: '# of Votes',\r\n                                            data: [12, 19, 3],\r\n\r\n\r\n                                            backgroundColor: [\r\n                                                'rgb(255, 99, 132)',\r\n                                                'rgb(54, 162, 235)',\r\n                                                'rgb(255, 205, 86)'\r\n                                                ],\r\n                                                hoverOffset: 4\r\n\r\n                                        }]\r\n                                    }}\r\n                                    height = {200}\r\n                                    width = {100}\r\n                                    options = {{\r\n                                        maintainAspectRatio: false,\r\n\r\n\r\n                                        layout: {\r\n                                            padding: {\r\n                                                top: 20\r\n                                            }\r\n                                        }\r\n                                    }}\r\n\r\n                                    />\r\n                                        \r\n                                </div>\r\n                 </div>\r\n                        \r\n                        <div class = \"barCharts\">\r\n                                <div class = \"dailyPie\">\r\n                                                    <h1 style={{color: \"black\"}}>Daily Statistics</h1>\r\n                                                <Bar\r\n                                                    data = {{\r\n                                                    labels: ['Sleep', 'Work', 'Hobby'],\r\n                                                    datasets: [{\r\n                                                        label:'Your Daily Statistics in bar chart',\r\n                                                        data: [12, 19, 3],\r\n\r\n\r\n\r\n                                                        //this is for bar chart\r\n                                                        \r\n                                                        backgroundColor: [\r\n                                                            'rgba(255, 99, 132, 0.2)',\r\n                                                            'rgba(54, 162, 235, 0.2)',\r\n                                                            'rgba(255, 206, 86, 0.2)'\r\n                                                            \r\n                                                        ],\r\n                                                        borderColor: [\r\n                                                            'rgba(255, 99, 132, 1)',\r\n                                                            'rgba(54, 162, 235, 1)',\r\n                                                            'rgba(255, 206, 86, 1)'\r\n                                                          \r\n                                                        ],\r\n                                                        borderWidth: 1,\r\n\r\n                                                    }]\r\n                                                }}\r\n                                                height = {200}\r\n                                                width = {100}\r\n                                                options = {{\r\n                                                    maintainAspectRatio: false,\r\n\r\n                                                    //this is for bar chart\r\n                                                    scales: {\r\n                                                        yAxes: [{\r\n                                                            ticks: {\r\n                                                            beginAtZero: true\r\n                                                                }\r\n                                                            \r\n                                                                }]\r\n                                                            \r\n                                                        },\r\n\r\n                                                    layout: {\r\n                                                        padding: {\r\n                                                            top: 20,\r\n                                                            \r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n\r\n                                                />\r\n        \r\n                                    </div>\r\n\r\n                                            <div class = \"dailyPie\">\r\n                                            <h1 style={{color: \"black\"}}>Weekly Statistics</h1>\r\n                                            <Bar\r\n                                            data = {{\r\n                                                labels: ['Sleep', 'Work', 'Hobby'],\r\n                                                datasets: [{\r\n                                                    label: 'Your weekly Statistics in bar chart',\r\n                                                    data: [12, 19, 3],\r\n\r\n\r\n\r\n                                                    //this is for bar chart\r\n                                                    \r\n                                                    backgroundColor: [\r\n                                                        'rgba(255, 99, 132, 0.2)',\r\n                                                        'rgba(54, 162, 235, 0.2)',\r\n                                                        'rgba(255, 206, 86, 0.2)'\r\n                                                       \r\n                                                    ],\r\n                                                    borderColor: [\r\n                                                        'rgba(255, 99, 132, 1)',\r\n                                                        'rgba(54, 162, 235, 1)',\r\n                                                        'rgba(255, 206, 86, 1)'\r\n                                                    \r\n                                                    ],\r\n                                                    borderWidth: 1,\r\n\r\n                                                }]\r\n                                            }}\r\n                                            height = {200}\r\n                                            width = {100}\r\n                                            options = {{\r\n                                                maintainAspectRatio: false,\r\n\r\n                                                //this is for bar chart\r\n                                                scales: {\r\n                                                    yAxes: [{\r\n                                                        ticks: {\r\n                                                        beginAtZero: true\r\n                                                            }\r\n                                                        \r\n                                                            }]\r\n                                                        \r\n                                                    },\r\n\r\n                                                layout: {\r\n                                                    padding: {\r\n                                                        top: 20\r\n                                                    }\r\n                                                }\r\n                                            }}\r\n\r\n                                            />\r\n                            </div>\r\n                        </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    \r\n    \r\n    export default Statistics;","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Timer\\Timer.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Timer\\TimerProc.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\About\\About.js",["126","127","128","129","130","131","132","133","134"],"\r\nimport { setMilliseconds } from 'date-fns';\r\nimport { relativeTimeRounding } from 'moment';\r\nimport React, { Component } from 'react';\r\nimport './About.css';\r\nimport wideconnectionLogo from './images/WIdeConnection_Logo.jpg';\r\nimport timeOwnerLogo from './images/TimeOwnerLogo.png'\r\nimport useCaseDiagram from './images/UseCaseDiagram.JPG'\r\nimport classDiagram from './images/classDiagram.JPG'\r\nimport functionalFlow from './images/functionalDecomp.jpg'\r\nimport ConceptFlow from './images/conecptualModel.JPG'\r\nimport ProcessFlow from './images/ProcessFlow.jpg'\r\nimport timeowner from './images/TimeOwner.jpg'\r\nimport classDiagram2 from './images/classDiagram2.png'\r\nimport UseCaseImg from './images/UseCase.JPG'\r\n\r\nimport arrow from './images/arrow.png'\r\nimport Alice_WC from './images/Alice/Alice_WC.JPG'\r\nimport Alice_PF from './images/Alice/Alice_PF.JPG'\r\nimport Alice_SC from './images/Alice/Alice_Schedule.JPG'\r\nimport Alice_AT from './images/Alice/Alice_AddTask.JPG'\r\nimport Alice_GO from './images/Alice/Alice_Goal.JPG'\r\nimport Alice_ST from './images/Alice/Alice_ST.JPG'\r\n\r\nconst About = () => {\r\n    return (\r\n\r\n        <div id = \"container\" class=\"hfeed\">\r\n            <a href=\"#\" className=\"to-top\">\r\n                <img className=\"scrollTop\" src={arrow}/>\r\n            </a>\r\n\r\n            <div className=\"grid-container\">\r\n                \r\n                    \r\n                <div className=\"aboutRow1\">\r\n                    <div className=\"about1content\">\r\n                        <h4> Time Owner </h4>\r\n                        <div>\r\n                            <p>Time Owner is time-management application, that would include daily to-do list, as well as calendar view.</p>\r\n                            <a href=\"#aboutTimeOwner\"> ▷ Click here to see more details</a>\r\n                        </div>\r\n                    </div>  \r\n                    \r\n                    <div className=\"abtimg1\">\r\n                        <img src={timeowner} className=\"time\" alt=\"\" /> \r\n                    </div>      \r\n                </div>\r\n\r\n                <div className=\"aboutRow2\">\r\n                    <div className=\"about2content\">\r\n                        \r\n                        <h4> Wide Connection </h4>\r\n                        <div>\r\n                            <p>The Wide Connection is a small Start-Up group dreaming to make the most useful and practical application to brighten user’s daily life.</p>\r\n                            <a href=\"#aboutWideConnection\"> ▷ Click here to see more details</a>\r\n                        </div>        \r\n                    </div>\r\n                    <div className=\"abtimg2\">\r\n                        <img src={wideconnectionLogo} alt=\"\" /> \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"aboutRow1\">\r\n                    <div className=\"about1content\">\r\n                        \r\n                        <h4> Use Case </h4>\r\n                        <div>\r\n                            <p>usage senario for our program? </p>\r\n                            <a href=\"#aboutUseCase\"> ▷ Click here to see more details</a>\r\n                        </div>        \r\n                    </div>\r\n                    <div className=\"abtimg1\">\r\n                        <img className=\"usecaseImg\" src={UseCaseImg}  /> \r\n                    </div>\r\n                </div>\r\n                <div className=\"aboutRow2\">\r\n                    \r\n                    <div className=\"about2content\">\r\n                        <h4> Class Diagram </h4>\r\n                        <div>\r\n                            <p>Here is our class diagram if you are interested in our web-app.</p>\r\n                            <a href=\"#aboutClassDiagram\"> ▷ Click here to see more details</a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"abtimg2\">\r\n                        <img src={classDiagram2} className=\"classDimg\" /> \r\n                    </div>        \r\n                </div>\r\n                <div className=\"aboutRow1\">\r\n                    <div className=\"about1content\" > \r\n                        \r\n                        <h4> Conception Module </h4>\r\n                        <div>\r\n                            <p>Our conception module for our project  </p>\r\n                            <a href=\"#aboutConceptionModule\"> ▷ Click here to see more details</a>\r\n                        </div>        \r\n                    </div>\r\n                    <div className=\"abtimg1\">\r\n                        <img src={functionalFlow} alt=\"\"/> \r\n                    </div>\r\n                </div>\r\n                <div className=\"aboutRow2\">\r\n                    \r\n                    <div className=\"about2content\">\r\n                        <h4> Future </h4>\r\n                        <div>\r\n                            <p>we are moving forward! here is our future plans</p>\r\n                            <a href=\"#aboutOurFuture\"> ▷ Click here to see more details</a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"abtimg2\">\r\n                        <img src={wideconnectionLogo} alt=\"\"/> \r\n                    </div>        \r\n                </div>\r\n            </div>\r\n            <div id = \"main\">\r\n\r\n                <div id = \"content\" class = \"main-post\">\r\n\r\n                    <div class = \"wrap\">\r\n\r\n\r\n                    <div class = \"entry-content\">\r\n\r\n                        \r\n                        \r\n                        <div class = \"contentbox\">\r\n                            <div  class = \"aboutTimeOwner\" id=\"aboutTimeOwner\">\r\n\r\n                     \r\n                                <img src={timeowner} alt=\"\" className=\"timeOwnerLogo\"/> \r\n\r\n                                    <p class =\"about_content\">\r\n                                    Wide connection’s 'Time Owner' is time-management application, that would include daily to-do list, as well as calendar view.<br /><br />\r\n                                    Time Owner will allow user to plan their days, weeks, and month ahead, as well as track their current productivity.<br /><br />\r\n                                    Time Owner will encourage users to create life goals and help with scheduling them out.<br /><br />\r\n                                    Time Owner would present user a statistic with how productive they were, and how close they are to fulfilling their goals.<br /><br />\r\n                                    Time Owner is also designed for user to assign the goal and checklist to have a constant visual reminder and to increase chance to achieve their goal.<br /><br />\r\n                                    Desperate user might choose to commit to their goal financially and receive a fine if goal is not completed.<br /><br />\r\n                                    Time Owner will allow user to choose maximum fine amount for not achieving goal commitment.\r\n                                     </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class = \"contentbox\" >\r\n                               \r\n\r\n                                <div className= \"aboutWideConnection\" id=\"aboutWideConnection\">\r\n\r\n                                    <h1 class =\"about_topic\">Wide Connection</h1>\r\n                                     <img src={wideconnectionLogo} alt=\"\" className=\"wideconnectionLogo\"/>\r\n\r\n                                        <h3 className=\"abouth3\">\"Time Owner will ease your daily life!\"</h3>\r\n\r\n                                     <p class =\"about_content\">\r\n                                        The Wide Connection is a small Start-Up group dreaming to make the most useful and practical application to brighten user’s daily life.<br /><br />\r\n                                         We are moving forward for our dreams by developing time-management application 'Time Owner'.\r\n                                       \r\n                                     </p>\r\n\r\n                \r\n\r\n                                </div>\r\n                                    \r\n                             \r\n                        </div>\r\n\r\n                        <div class = \"contentbox\">\r\n                               <div className= \"aboutUseCase\" id=\"aboutUseCase\">\r\n   \r\n                                    <h1 class =\"about_topic\">Usecase Diagram</h1>\r\n                                   <img src={useCaseDiagram} alt=\"\" className=\"useCaseDiagram\"/> \r\n\r\n                     \r\n                               </div>\r\n   \r\n                               \r\n                                   \r\n                                  \r\n   \r\n                           </div>\r\n\r\n                           <div class = \"contentbox\" >\r\n                               \r\n                               <div className= \"aboutClassDiagram\" id=\"aboutClassDiagram\"> \r\n   \r\n                               <h1 class =\"about_topic\">Class Diagram</h1>\r\n                                   <img src={classDiagram} alt=\"\" className=\"classDiagram\"/> \r\n   \r\n                                \r\n   \r\n                     \r\n                               </div>\r\n   \r\n                               \r\n                                   \r\n                                  \r\n   \r\n                           </div>\r\n\r\n                           <div class = \"contentbox\" >\r\n                               \r\n                               <div className = \"aboutConceptionModule\" id=\"aboutConceptionModule\">\r\n   \r\n                               <h1 class =\"about_topic\">Concept and Key Flow</h1>\r\n                                   <img src={functionalFlow} alt=\"\" className=\"functionalFlow\"/> \r\n                                   <img src={ProcessFlow} alt=\"\" className=\"ProcessFlow\"/> \r\n   \r\n                                       \r\n   \r\n                     \r\n                               </div>\r\n   \r\n                               \r\n                                   \r\n                                  \r\n   \r\n                           </div>\r\n\r\n                           <div class = \"contentbox\" >\r\n                               \r\n                               \r\n\r\n                               \r\n                               <div className = \"aboutOurFuture\" id=\"aboutOurFuture\">\r\n   \r\n                               <h1 style={{paddingBottom: '50px'}}class =\"about_topic\">Our Future Plan</h1>\r\n                                    <div>\r\n                                        <img src={Alice_WC} alt=\"\" className=\"Alice_WC\"/> \r\n\r\n                                        <img src={Alice_PF} alt=\"\" className=\"Alice_PF\"/> \r\n\r\n                                        <img src={ Alice_SC} alt=\"\" className=\" Alice_SC\"/> \r\n\r\n                                        <img src={  Alice_AT} alt=\"\" className=\"  Alice_AT\"/> \r\n\r\n                                        <img src={ Alice_GO} alt=\"\" className=\"  Alice_GO\"/> \r\n\r\n                                        <img src={Alice_ST} alt=\"\" className=\" Alice_ST\"/> \r\n                                    </div>\r\n                               </div>\r\n\r\n                               </div>\r\n                    </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n           \r\n       \r\n    );\r\n}\r\n\r\n\r\nexport default About;","C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Loading\\Loading.jsx",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\TableForm\\TableForm.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\useTable.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Popup.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Notification.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\ConfirmDialog.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\categories\\calendarTask.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\controls\\Controls.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\useForm.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\controls\\Select.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\controls\\Button.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\controls\\Input.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\controls\\ActionButton.js",[],"C:\\Users\\youns\\Desktop\\login3\\time-owner\\src\\components\\Login\\Login.js",["135","136","137"],"import React, { Component, Fragment } from 'react';\r\nimport { Form, Row, Col, Container, Button } from 'react-bootstrap';\r\nimport './Login.css';\r\n\r\nimport LoginImg from './image/loginimg.png';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: {\r\n        userID: String,\r\n        password: String,\r\n      },\r\n      loggedIn: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h2 className=\"PageTitle text-center\">Log In</h2>\r\n        <Container>\r\n          <Row>\r\n            <Col lg={6} md={6} sm={12} className=\"p-5 m-auto\">\r\n              <div className=\"LoginBox p-5 m-auto\">\r\n                <img className=\"LoginImg\" src={LoginImg} alt=\"\" />\r\n\r\n                <Form className=\"mt-3\">\r\n                  <br />\r\n                  <Form.Group>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Enter Password\"\r\n                    />\r\n                    <small\r\n                      id=\"passwordHelpInline\"\r\n                      class=\"text-muted\"\r\n                      style={{ marginLeft: '30px' }}\r\n                    >\r\n                      Must be 8-20 characters long.\r\n                    </small>\r\n                  </Form.Group>\r\n                  <br />\r\n\r\n                  <div>\r\n                    <p className=\"forgot-password text-center\">\r\n                      <a href=\"#\">Forgot ID?</a> /{' '}\r\n                      <a href=\"#\">Forgot Password?</a>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"noaccount text-center\">\r\n                    <span>\r\n                      No account? <a href=\"#\"> Sign up </a>\r\n                    </span>\r\n                  </div>\r\n                  <br />\r\n                  <Button className=\"btn-block\" variant=\"success\" type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n",{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":9,"column":8,"nodeType":"144","messageId":"145","endLine":9,"endColumn":18},{"ruleId":"142","severity":1,"message":"146","line":10,"column":8,"nodeType":"144","messageId":"145","endLine":10,"endColumn":13},{"ruleId":"142","severity":1,"message":"147","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":17},{"ruleId":"142","severity":1,"message":"148","line":150,"column":9,"nodeType":"144","messageId":"145","endLine":150,"endColumn":14},{"ruleId":"142","severity":1,"message":"149","line":151,"column":5,"nodeType":"144","messageId":"145","endLine":151,"endColumn":7},{"ruleId":"142","severity":1,"message":"150","line":152,"column":5,"nodeType":"144","messageId":"145","endLine":152,"endColumn":9},{"ruleId":"142","severity":1,"message":"151","line":153,"column":5,"nodeType":"144","messageId":"145","endLine":153,"endColumn":7},{"ruleId":"142","severity":1,"message":"152","line":17,"column":10,"nodeType":"144","messageId":"145","endLine":17,"endColumn":30},{"ruleId":"142","severity":1,"message":"153","line":18,"column":10,"nodeType":"144","messageId":"145","endLine":18,"endColumn":14},{"ruleId":"142","severity":1,"message":"154","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"155","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":18},{"ruleId":"142","severity":1,"message":"156","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":25},{"ruleId":"142","severity":1,"message":"152","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":30},{"ruleId":"142","severity":1,"message":"154","line":4,"column":17,"nodeType":"144","messageId":"145","endLine":4,"endColumn":26},{"ruleId":"142","severity":1,"message":"157","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":21},{"ruleId":"142","severity":1,"message":"158","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":19},{"ruleId":"159","severity":1,"message":"160","line":29,"column":13,"nodeType":"161","endLine":29,"endColumn":44},{"ruleId":"162","severity":1,"message":"163","line":30,"column":17,"nodeType":"161","endLine":30,"endColumn":57},{"ruleId":"162","severity":1,"message":"163","line":74,"column":25,"nodeType":"161","endLine":74,"endColumn":73},{"ruleId":"162","severity":1,"message":"163","line":87,"column":25,"nodeType":"161","endLine":87,"endColumn":74},{"ruleId":"159","severity":1,"message":"160","line":52,"column":23,"nodeType":"161","endLine":52,"endColumn":35},{"ruleId":"159","severity":1,"message":"160","line":53,"column":23,"nodeType":"161","endLine":53,"endColumn":35},{"ruleId":"159","severity":1,"message":"160","line":58,"column":35,"nodeType":"161","endLine":58,"endColumn":47},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'Categories' is defined but never used.","Identifier","unusedVar","'Timer' is defined but never used.","'TimerProc' is defined but never used.","'dname' is assigned a value but never used.","'mo' is assigned a value but never used.","'dnum' is assigned a value but never used.","'yr' is assigned a value but never used.","'relativeTimeRounding' is defined but never used.","'blue' is defined but never used.","'Component' is defined but never used.","'Redirect' is defined but never used.","'setMilliseconds' is defined but never used.","'timeOwnerLogo' is defined but never used.","'ConceptFlow' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]